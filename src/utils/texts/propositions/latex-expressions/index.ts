const latexExpressions = {
  T: `$$\\mathfrak{T}$$`,
  R1Rn: `$\\{R_{1}, R_{2}, ..., R_{n}\\}$`,
  Ri: `$$R_{i}$$`,
  k: `$$k$$`,
  F: `$$F$$`,
  F1Fn: `$$F_{1}, F_{2}, ..., F_{n}$$`,
  F1FnMinus1Fn: `$$\\{F_{1}, F_{2}, ..., F_{n-1}, F_{n}\\}$$`,
  F1FnMinus1: `$$\\{F_{1}, F_{2}, ..., F_{n-1}\\}$$`,
  FnToG: `$$F_{n} \\rightarrow G$$`,
  F1FnMinus1FnDashG: `$$F_{1}, F_{2}, ..., F_{n-1}, F_{n} \\vdash G$$`,
  F1FnMinus1FnDashToG: `$$F_{1}, F_{2}, ..., F_{n-1} \\vdash F_{n} \\rightarrow G$$`,
  G: `$$G$$`,
  Delta: `$$\\Delta$$`,
  Gamma: `$$\\Gamma$$`,
  GammaDashF: `$$\\Gamma \\vdash F$$`,
  GammaSubsetDelta: `$$\\Gamma \\subseteq \\Delta$$`,
  DeltaDashF: `$$\\Delta \\vdash F$$`,
  GammaDashG: `$$\\Gamma \\vdash G$$`,
  Fi: `$$F_{i}$$`,
  Fn: `$$F_{n}$$`,
  DeltaToG: `$$\\Delta \\vdash G.$$`,
  DeltaToNothing: `$$\\Delta~=~\\varnothing$$`,
  toG: `$$\\vdash G$$`,
  IC: `$$\\Phi \\rightarrow (\\Psi \\rightarrow \\Phi)$$`,
  ID: `$$(\\Phi \\rightarrow (\\Psi \\rightarrow \\Chi)) \\rightarrow ((\\Phi \\rightarrow \\Psi) \\rightarrow (\\Phi \\rightarrow \\Chi))$$`,
  CR: `$$(\\neg \\Psi \\rightarrow \\neg \\Phi) \\rightarrow ((\\neg \\Psi \\rightarrow \\Phi) \\rightarrow \\Psi)$$`,
  FtoG: `$$F \\rightarrow G$$`,
  FandG: `$$F \\land G$$`,
  ForG: `$$F \\lor G$$`,
  notF: `$$\\neg F$$`,
  FtoNotG: `$$F \\rightarrow \\neg G$$`,
  FtoH: `$$F \\rightarrow H$$`,
  GtoH: `$$G \\rightarrow H$$`,
  H: `$$H$$`,
  dashF: `$$\\vdash F$$`,
  dashG: `$$\\vdash G$$`,
  dashFandG: `$$\\vdash F \\land G$$`,
  dashForG: `$$\\vdash F \\lor G$$`,
  dashFtoH: `$$\\vdash F \\rightarrow H$$`,
  dashGtoH: `$$\\vdash G \\rightarrow H$$`,
  dashH: `$$\\vdash H$$`,
  FdashG: `$$F \\vdash G$$`,
  dashFtoG: `$$\\vdash F \\rightarrow G$$`,
  dashGtoF: `$$\\vdash G \\rightarrow F$$`,
  dashFequivG: `$$\\vdash F \\leftrightarrow G$$`,
  dashFtoNotG: `$$\\vdash F \\rightarrow \\neg G$$`,
  dashNotF: `$$\\vdash \\neg F$$`,
  dashNotNotF: `$$\\vdash \\neg \\neg F$$`,
  // Boolean functions
  constantFalse: `$$\\bot$$`,
  and: `$$\\land$$`,
  notImplication: `$$\\nrightarrow$$`,
  constantP: `$$p$$`,
  notBackImplication: `$$\\nleftarrow$$`,
  constantQ: `$$q$$`,
  nor: `$$\\oplus$$`,
  or: `$$\\lor$$`,
  pierce: `$$\\downarrow$$`,
  equivalence: `$$\\leftrightarrow$$`,
  notQ: `$$\\neg q$$`,
  implication: `$$\\leftarrow$$`,
  notP: `$$\\neg p$$`,
  backImplication: `$$\\rightarrow$$`,
  sheffer: `$$|$$`,
  constantTrue: `$$\\top$$`,
};

export default Object.freeze(latexExpressions);
